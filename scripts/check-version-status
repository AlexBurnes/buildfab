#!/bin/bash

# Version status checking script
# Used by AI assistant to check version status before making changes
# Uses buildfab library's version check-greatest functionality

set -e

# Colors for output
if [[ -t 1 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
    RED='\033[0;31m'
    GREEN='\033[0;32m'
    YELLOW='\033[1;33m'
    BLUE='\033[0;34m'
    NC='\033[0m' # No Color
else
    RED='' GREEN='' YELLOW='' BLUE='' NC=''
fi

echo -e "${BLUE}üîç Checking version status...${NC}"

# Check if VERSION file exists
if [[ ! -f "VERSION" ]]; then
    echo -e "VERSION file: ${RED}NOT FOUND${NC}"
    echo -e "${RED}‚ùå VERSION file is required for this project${NC}"
    echo -e "${YELLOW}üí° Create VERSION file with: echo 'v1.0.0' > VERSION${NC}"
    exit 1
fi

# Get VERSION file content
VERSION_FILE=$(cat VERSION)
echo -e "VERSION file: ${GREEN}$VERSION_FILE${NC}"

# Use version utility to check if current version is the greatest
echo -e "${BLUE}üîç Checking if current version is the greatest...${NC}"

# Check if version utility exists
if [[ ! -f "scripts/version" ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Version utility not found at scripts/version${NC}"
    echo -e "${YELLOW}üìù Fallback: Please ensure VERSION file is greater than latest git tag${NC}"
    echo -e "${GREEN}Ready to make changes!${NC}"
    exit 0
fi

# Run version check-greatest command with VERSION file content
CHECK_RESULT=$(scripts/version check-greatest "$VERSION_FILE" 2>&1 || true)

if echo "$CHECK_RESULT" | grep -q "is the greatest among all tags"; then
    echo -e "${GREEN}‚úÖ Current version is the greatest${NC}"
    echo -e "${GREEN}‚úÖ Version status OK${NC}"
    echo -e "${GREEN}Ready to make changes!${NC}"
    exit 0
elif echo "$CHECK_RESULT" | grep -q "is not the greatest among all tags"; then
    # Get the greatest version using git tags
    GREATEST_VERSION=$(git tag --sort=-version:refname | head -1)
    echo -e "${RED}‚ùå Current version $VERSION_FILE is not the greatest${NC}"
    echo -e "${RED}‚ùå Greatest version is: $GREATEST_VERSION${NC}"
    echo -e "${YELLOW}üìù Suggestion: Update VERSION file to be greater than $GREATEST_VERSION${NC}"
    echo -e "   ${BLUE}scripts/version bump patch${NC}    # for bug fixes"
    echo -e "   ${BLUE}scripts/version bump minor${NC}    # for new features" 
    echo -e "   ${BLUE}scripts/version bump major${NC}    # for breaking changes"
    echo ""
    echo -e "${YELLOW}Then make your changes and follow the workflow in docs/Developer-workflow.md${NC}"
    exit 1
else
    echo -e "${YELLOW}‚ö†Ô∏è  Could not determine version status using version utility${NC}"
    echo -e "${YELLOW}üìù Fallback: Please ensure VERSION file is greater than latest git tag${NC}"
    echo -e "${GREEN}Ready to make changes!${NC}"
    exit 0
fi