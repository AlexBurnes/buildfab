project:
  name: "buildfab-platform-test"
  modules: ["buildfab"]
  bin: "bin"

stages:
  check-detection:
    steps:
      - action: wine-test
      - action: platform-validation-test

actions:
  - name: wine-test
    uses: version@check
    
  - name: platform-validation-test
    shell: powershell
    run: |
      Write-Host "=== Buildfab Platform Detection Validation Test (Wine) ==="
      Write-Host "Testing Windows binary under Wine emulation with validation"
      Write-Host ""
      
      # Expected values for Windows under Wine
      $expected_platform = "windows"
      $expected_arch = "amd64"
      $expected_os = "windows"
      $expected_cpu_min = 1
      
      # Get actual values from buildfab variables
      $actual_platform = "${{ platform }}"
      $actual_arch = "${{ arch }}"
      $actual_os = "${{ os }}"
      $actual_os_version = "${{ os_version }}"
      $actual_cpu = [int]"${{ cpu }}"
      
      Write-Host "=== Validation Results ==="
      
      # Validate platform
      if ($actual_platform -eq $expected_platform) {
          Write-Host "✅ Platform: $actual_platform (CORRECT)"
      } else {
          Write-Host "❌ Platform: $actual_platform (EXPECTED: $expected_platform)"
          exit 1
      }
      
      # Validate architecture
      if ($actual_arch -eq $expected_arch) {
          Write-Host "✅ Architecture: $actual_arch (CORRECT)"
      } else {
          Write-Host "❌ Architecture: $actual_arch (EXPECTED: $expected_arch)"
          exit 1
      }
      
      # Validate OS
      if ($actual_os -eq $expected_os) {
          Write-Host "✅ OS: $actual_os (CORRECT)"
      } else {
          Write-Host "❌ OS: $actual_os (EXPECTED: $expected_os)"
          exit 1
      }
      
      # Validate OS Version (should contain "windows")
      if ($actual_os_version -like "*windows*") {
          Write-Host "✅ OS Version: $actual_os_version (CORRECT - contains 'windows')"
      } else {
          Write-Host "❌ OS Version: $actual_os_version (EXPECTED: should contain 'windows')"
          exit 1
      }
      
      # Validate CPU count (should be positive integer)
      if ($actual_cpu -ge $expected_cpu_min) {
          Write-Host "✅ CPU: $actual_cpu cores (CORRECT - >= $expected_cpu_min)"
      } else {
          Write-Host "❌ CPU: $actual_cpu cores (EXPECTED: >= $expected_cpu_min)"
          exit 1
      }
      
      Write-Host ""
      Write-Host "=== All Platform Detection Validations Passed! ==="
      Write-Host "✅ Platform detection test completed successfully"
