project:
  name: "buildfab-platform-test"
  modules: ["buildfab"]
  bin: "bin"

stages:
  check-detection:
    steps:
      - action: platform-validation-test

actions:
  - name: platform-validation-test
    run: |
      echo "=== Buildfab Platform Detection Validation Test ==="
      echo "Testing on macOS platform"
      echo ""
      
      # Expected values for macOS
      expected_platform="darwin"
      expected_arch="amd64"
      expected_os="darwin"
      expected_cpu_min=1
      
      # Get actual values from buildfab variables
      actual_platform="${{ platform }}"
      actual_arch="${{ arch }}"
      actual_os="${{ os }}"
      actual_os_version="${{ os_version }}"
      actual_cpu="${{ cpu }}"
      
      echo "=== Validation Results ==="
      
      # Validate platform
      if [ "$actual_platform" = "$expected_platform" ]; then
          echo "✅ Platform: $actual_platform (CORRECT)"
      else
          echo "❌ Platform: $actual_platform (EXPECTED: $expected_platform)"
          exit 1
      fi
      
      # Validate architecture (could be amd64 or arm64 on macOS)
      if [ "$actual_arch" = "amd64" ] || [ "$actual_arch" = "arm64" ]; then
          echo "✅ Architecture: $actual_arch (CORRECT - valid macOS architecture)"
      else
          echo "❌ Architecture: $actual_arch (EXPECTED: amd64 or arm64)"
          exit 1
      fi
      
      # Validate OS
      if [ "$actual_os" = "$expected_os" ]; then
          echo "✅ OS: $actual_os (CORRECT)"
      else
          echo "❌ OS: $actual_os (EXPECTED: $expected_os)"
          exit 1
      fi
      
      # Validate OS Version (should be numeric like 14.0, 15.0, etc.)
      if echo "$actual_os_version" | grep -qE '^[0-9]+(\.[0-9]+)*$'; then
          echo "✅ OS Version: $actual_os_version (CORRECT - valid version format)"
      else
          echo "❌ OS Version: $actual_os_version (EXPECTED: numeric version like 14.0 or 15.0)"
          exit 1
      fi
      
      # Validate CPU count (should be positive integer)
      if [ "$actual_cpu" -ge "$expected_cpu_min" ]; then
          echo "✅ CPU: $actual_cpu cores (CORRECT - >= $expected_cpu_min)"
      else
          echo "❌ CPU: $actual_cpu cores (EXPECTED: >= $expected_cpu_min)"
          exit 1
      fi
      
      echo ""
      echo "=== All Platform Detection Validations Passed! ==="
      echo "✅ Platform detection test completed successfully"
